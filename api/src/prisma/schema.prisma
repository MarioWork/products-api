// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  createdBy User      @relation(fields: [userId], references: [id])
  userId    String
  products  Product[]
}

model Product {
  id          String     @id @default(uuid())
  upc         String     @unique
  createdAt   DateTime   @default(now())
  createdBy   User       @relation(fields: [userId], references: [id])
  updatedAt   DateTime   @updatedAt
  name        String
  description String
  quantity    Int        @default(0)
  images      File[]
  categories  Category[]
  supplier    Supplier   @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  supplierId  String
  userId      String
}

model File {
  id        String   @id @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  url       String
  type      String
  product   Product? @relation(fields: [productId], references: [id])
  productId String?
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @unique
}

model User {
  id             String     @id @unique
  email          String     @unique
  nif            String     @unique
  firstName      String
  lastName       String
  roles          String[]
  profilePicture File?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  categories     Category[]
  suppliers      Supplier[]
  products       Product[]
}

model Supplier {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  createdBy User      @relation(fields: [userId], references: [id])
  userId    String
  name      String
  nif       String    @unique
  products  Product[]
}
